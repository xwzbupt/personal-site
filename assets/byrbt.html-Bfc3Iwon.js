import{_ as i,c as a,a as n,o as e}from"./app-B_fBko6u.js";const t={};function p(l,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="如何在非ipv6的校园网环境下使用北邮人bt" tabindex="-1"><a class="header-anchor" href="#如何在非ipv6的校园网环境下使用北邮人bt"><span><strong>如何在非ipv6的校园网环境下使用北邮人bt？</strong></span></a></h1><h2 id="一、byrbt介绍" tabindex="-1"><a class="header-anchor" href="#一、byrbt介绍"><span><strong>一、BYRBT介绍</strong></span></a></h2><p>使用CentOS 7的系统，笔者使用的是CentOS 7.9。<strong>如果使用的是云服务器，需要在安全组中开放5700端口。</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre></div><p>安装docker：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 一直按enter键可以默认所有操作</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitee.com/SuperManito/LinuxMirrors/raw/main/DockerInstallation.sh)</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>不要使用github的qinglong最新版本，因为跟脚本的适配性不够好，很多脚本会执行失败。<strong>推荐2.11.X版本，笔者使用的是2.11.0版本，可以使用下面的命令自动安装。</strong></p></div><p>安装qinglong的docker镜像：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 一直按enter键可以默认所有操作</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://yanyu.ltd/https://raw.githubusercontent.com/yanyuwangluo/VIP/main/Scripts/sh/ql.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ql.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ql.sh</span></span></code></pre></div><p>安装完毕后，在浏览器访问<code>ip:5700</code>，即可进入青龙面板的图形化界面。配置自己的账号密码，如果有通知的需要，来配置相关信息。</p><h2 id="二、qinglong中的配置" tabindex="-1"><a class="header-anchor" href="#二、qinglong中的配置"><span><strong>二、qinglong中的配置</strong></span></a></h2><h3 id="拉脚本库" tabindex="-1"><a class="header-anchor" href="#拉脚本库"><span><strong>拉脚本库</strong></span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>有很多京东的脚本库，但是许多脚本库的活动都停止了，或者已经跑不起来了，这里笔者经过查找和踩坑，推荐一个目前还在更新的脚本库，作者是faker。</p></div><p>拉取脚本库的命令：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Faker2 助力池版【安全本地sign防CK泄漏】</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker2.git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;activity|backUp&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;main&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Faker3 内部互助版【安全本地sign防CK泄漏】</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker3.git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;activity|backUp&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;main&quot;</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>【注意】不可同时拉Faker2与Faker3仓库，同时拉多个集合库容易黑ip，保留一个即可。</p></div><p>在拉库之前，需要修改配置文件中的一个字段。点击配置文件，设置GithubProxyUrl=&quot;&quot;。</p><p>进入面板后，点击<code>定时任务</code>，点击<code>新建任务</code>，然后在命令那里输入拉取脚本库的命令，定时规则笔者设置的是<code>45 23 * * *</code>，即每天的23：45再次执行该脚本拉取脚本库。</p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217002751812.png" alt="image-20221217002751812" tabindex="0" loading="lazy"><figcaption>image-20221217002751812</figcaption></figure><p>之后点击下图按钮，执行该脚本拉取库中的脚本。</p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217002855893.png" alt="image-20221217002855893" tabindex="0" loading="lazy"><figcaption>image-20221217002855893</figcaption></figure><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量"><span><strong>配置环境变量</strong></span></a></h3><p>点击青龙面板的依赖管理——&gt;新建依赖——&gt;选择NodeJs、自动拆分选择是，复制以下的依赖填到名称里——&gt;点击确定，等待安装完成。如下图所示：</p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217003212599.png" alt="image-20221217003212599" tabindex="0" loading="lazy"><figcaption>image-20221217003212599</figcaption></figure><div class="language- line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="" style="--vp-collapsed-lines:20;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>crypto-js</span></span>
<span class="line"><span>prettytable</span></span>
<span class="line"><span>dotenv</span></span>
<span class="line"><span>jsdom</span></span>
<span class="line"><span>date-fns</span></span>
<span class="line"><span>tough-cookie</span></span>
<span class="line"><span>tslib</span></span>
<span class="line"><span>ws@7.4.3</span></span>
<span class="line"><span>ts-md5</span></span>
<span class="line"><span>jsdom -g</span></span>
<span class="line"><span>jieba</span></span>
<span class="line"><span>fs</span></span>
<span class="line"><span>form-data</span></span>
<span class="line"><span>json5</span></span>
<span class="line"><span>global-agent</span></span>
<span class="line"><span>png-js</span></span>
<span class="line"><span>@types/node</span></span>
<span class="line"><span>require</span></span>
<span class="line"><span>typescript</span></span>
<span class="line"><span>js-base64</span></span>
<span class="line"><span>axios</span></span>
<span class="line"><span>moment</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>同理，Python下有：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>requests</span></span>
<span class="line"><span>canvas</span></span>
<span class="line"><span>ping3</span></span>
<span class="line"><span>jieba</span></span>
<span class="line"><span>PyExecJS</span></span>
<span class="line"><span>aiohttp</span></span></code></pre></div><p>同理，Linux下有：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>bizCode</span></span>
<span class="line"><span>bizMsg</span></span>
<span class="line"><span>lxm</span></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>安装时间较长，耐心等待一下。如果最终提示安装失败，可以点击bug的那个按钮进行重新安装。</p></div><h2 id="三、配置jd账号cookie" tabindex="-1"><a class="header-anchor" href="#三、配置jd账号cookie"><span><strong>三、配置JD账号Cookie</strong></span></a></h2><p>一切就绪后，接下来就是最重要的环节：配置我们的京东账号信息。</p><p>打开Chrome浏览器，输入<code>jd.com</code>，按照下图步骤切换为手机视图。</p><figure><img src="https://pic4.zhimg.com/80/v2-218c5d33ae742e0448a78e907233e973_720w.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>我们可以选择iPhoneX视图，刷新页面后发现地址栏变为手机版的京东首页地址<code>m.jd.com</code></p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-5bec51cd4a9b4964788479c2a75d28f4_720w.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>正常按照手机号+验证码登录</p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-5925b549502d4ff5af2eae4d496cfe47_720w.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>登录过后，这个时候就需要从cookie中查看<code>pt_</code>开头的两个关键配置：<code>pt_key</code>,<code>pt_pin</code></p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-6dc96dc7a8b2a0dea6fdc2baa96bbaae_720w.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>把对应的value拷贝出来，整理格式如下</p><div class="language-text" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>pt_key=xxxx;pt_pin=xxxx;</span></span></code></pre></div><p>接下来回到青龙面板，新建环境变量，名称为<code>JD_COOKIE</code>，值为上面整理的文本。</p><figure><img src="https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-37d79a6fd07980a90ec09dfca35d243a_720w.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>经过以上步骤，京东账号的信息就配置完毕了。</p><h2 id="四、测试" tabindex="-1"><a class="header-anchor" href="#四、测试"><span><strong>四、测试</strong></span></a></h2><p>保存过后，我们就可以从脚本列表中，手动执行任意一个任务脚本来验证一下。</p><p>可以执行<code>京东多合一签到</code>脚本，发现签到成功，说明配置成功。</p><p>笔者写下这篇教程已经配置完成三天了，收益大概是40-70京豆不等。</p>`,49)])])}const h=i(t,[["render",p]]),r=JSON.parse('{"path":"/funny/byrbt.html","title":"如何在非ipv6的校园网环境下使用北邮人bt？","lang":"zh-CN","frontmatter":{"category":"折腾","description":"如何在非ipv6的校园网环境下使用北邮人bt？ 一、BYRBT介绍 使用CentOS 7的系统，笔者使用的是CentOS 7.9。如果使用的是云服务器，需要在安全组中开放5700端口。 安装docker： 注意 不要使用github的qinglong最新版本，因为跟脚本的适配性不够好，很多脚本会执行失败。推荐2.11.X版本，笔者使用的是2.11.0版...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何在非ipv6的校园网环境下使用北邮人bt？\\",\\"image\\":[\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217002751812.png\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217002855893.png\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217003212599.png\\",\\"https://pic4.zhimg.com/80/v2-218c5d33ae742e0448a78e907233e973_720w.webp\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-5bec51cd4a9b4964788479c2a75d28f4_720w.webp\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-5925b549502d4ff5af2eae4d496cfe47_720w.webp\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-6dc96dc7a8b2a0dea6fdc2baa96bbaae_720w.webp\\",\\"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/v2-37d79a6fd07980a90ec09dfca35d243a_720w.webp\\"],\\"dateModified\\":\\"2025-06-21T15:03:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Weiser\\",\\"url\\":\\"https://github.com/xwzbupt\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/funny/byrbt.html"}],["meta",{"property":"og:site_name","content":"Weiser"}],["meta",{"property":"og:title","content":"如何在非ipv6的校园网环境下使用北邮人bt？"}],["meta",{"property":"og:description","content":"如何在非ipv6的校园网环境下使用北邮人bt？ 一、BYRBT介绍 使用CentOS 7的系统，笔者使用的是CentOS 7.9。如果使用的是云服务器，需要在安全组中开放5700端口。 安装docker： 注意 不要使用github的qinglong最新版本，因为跟脚本的适配性不够好，很多脚本会执行失败。推荐2.11.X版本，笔者使用的是2.11.0版..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://personal-site-pictures.oss-cn-beijing.aliyuncs.com/img/image-20221217002751812.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T15:03:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T15:03:37.000Z"}]]},"git":{"createdTime":1750518217000,"updatedTime":1750518217000,"contributors":[{"name":"weiser","username":"weiser","email":"1134685563@qq.com","commits":1,"url":"https://github.com/weiser"}]},"readingTime":{"minutes":3.44,"words":1031},"filePathRelative":"funny/byrbt.md","excerpt":"\\n<h2><strong>一、BYRBT介绍</strong></h2>\\n<p>使用CentOS 7的系统，笔者使用的是CentOS 7.9。<strong>如果使用的是云服务器，需要在安全组中开放5700端口。</strong></p>\\n<div class=\\"language-bash\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">yum</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> update</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -y</span></span></code></pre>\\n</div>","autoDesc":true}');export{h as comp,r as data};
